
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CAR CDR CONS DIVIDE EQ FALSE GR GREQ IF LPAREN LT LTEQ MINUS NEQ NOT NUMBER OR PLUS RPAREN SEMI TIMES TRUEStart : Expr SEMI\n            | BoolExpr SEMI\n            | ListExpr SEMIExpr : NUMBERExpr : LPAREN PLUS Expr Expr RPARENExpr : LPAREN MINUS Expr Expr RPARENExpr : LPAREN TIMES Expr Expr RPARENExpr : LPAREN DIVIDE Expr Expr RPARENExpr : LPAREN CAR ListExpr RPARENExpr : LPAREN IF BoolExpr Expr Expr RPARENBoolExpr : TRUEBoolExpr : FALSEBoolExpr : LPAREN GR Expr Expr RPARENBoolExpr : LPAREN GREQ Expr Expr RPARENBoolExpr : LPAREN LT Expr Expr RPARENBoolExpr : LPAREN LTEQ Expr Expr RPARENBoolExpr : LPAREN EQ Expr Expr RPARENBoolExpr : LPAREN NEQ Expr Expr RPARENBoolExpr : LPAREN NOT BoolExpr RPARENBoolExpr : LPAREN AND BoolExpr BoolExpr RPARENBoolExpr : LPAREN OR BoolExpr BoolExpr RPARENExprArray : ExprArray ExprExprArray : ExprListExpr : LPAREN ExprArray RPARENListExpr : LPAREN RPARENListExpr : LPAREN CDR ListExpr RPARENListExpr : LPAREN CONS Expr ListExpr RPARENempty :'
    
_lr_action_items = {'NUMBER':([0,5,6,7,8,13,14,16,17,18,21,22,23,24,25,26,30,32,33,34,35,36,37,40,41,42,43,44,45,46,51,58,59,66,71,72,73,74,76,77,78,79,80,81,82,83,85,],[5,-4,5,-11,-12,5,-23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-22,-9,5,-19,-5,-6,-7,-8,-13,-14,-15,-16,-17,-18,-20,-21,-10,]),'LPAREN':([0,5,6,7,8,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,48,49,51,53,58,59,66,71,72,73,74,76,77,78,79,80,81,82,83,85,],[6,-4,12,-11,-12,12,-23,12,12,12,37,39,12,12,12,12,12,12,39,39,39,12,37,12,12,12,12,12,12,12,12,12,12,12,12,12,39,39,-22,37,-9,12,-19,-5,-6,-7,-8,-13,-14,-15,-16,-17,-18,-20,-21,-10,]),'TRUE':([0,7,8,20,27,28,29,48,49,66,76,77,78,79,80,81,82,83,],[7,-11,-12,7,7,7,7,7,7,-19,-13,-14,-15,-16,-17,-18,-20,-21,]),'FALSE':([0,7,8,20,27,28,29,48,49,66,76,77,78,79,80,81,82,83,],[8,-11,-12,8,8,8,8,8,8,-19,-13,-14,-15,-16,-17,-18,-20,-21,]),'$end':([1,9,10,11,],[0,-1,-2,-3,]),'SEMI':([2,3,4,5,7,8,15,50,58,66,69,71,72,73,74,76,77,78,79,80,81,82,83,84,85,],[9,10,11,-4,-11,-12,-25,-24,-9,-19,-26,-5,-6,-7,-8,-13,-14,-15,-16,-17,-18,-20,-21,-27,-10,]),'RPAREN':([5,6,7,8,14,15,30,37,38,47,50,51,52,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-4,15,-11,-12,-23,-25,50,15,58,66,-24,-22,69,71,72,73,74,-9,76,77,78,79,80,81,-19,82,83,-26,84,-5,-6,-7,-8,85,-13,-14,-15,-16,-17,-18,-20,-21,-27,-10,]),'PLUS':([6,12,],[13,13,]),'MINUS':([6,12,],[16,16,]),'TIMES':([6,12,],[17,17,]),'DIVIDE':([6,12,],[18,18,]),'CAR':([6,12,],[19,19,]),'IF':([6,12,],[20,20,]),'GR':([6,39,],[21,21,]),'GREQ':([6,39,],[22,22,]),'LT':([6,39,],[23,23,]),'LTEQ':([6,39,],[24,24,]),'EQ':([6,39,],[25,25,]),'NEQ':([6,39,],[26,26,]),'NOT':([6,39,],[27,27,]),'AND':([6,39,],[28,28,]),'OR':([6,39,],[29,29,]),'CDR':([6,37,],[31,31,]),'CONS':([6,37,],[32,32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'Expr':([0,6,13,16,17,18,21,22,23,24,25,26,30,32,33,34,35,36,37,40,41,42,43,44,45,46,59,],[2,14,33,34,35,36,41,42,43,44,45,46,51,53,54,55,56,57,14,59,60,61,62,63,64,65,75,]),'BoolExpr':([0,20,27,28,29,48,49,],[3,40,47,48,49,67,68,]),'ListExpr':([0,19,31,53,],[4,38,52,70,]),'ExprArray':([6,37,],[30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> Expr SEMI','Start',2,'p_start_expr','LISPParser.py',4),
  ('Start -> BoolExpr SEMI','Start',2,'p_start_expr','LISPParser.py',5),
  ('Start -> ListExpr SEMI','Start',2,'p_start_expr','LISPParser.py',6),
  ('Expr -> NUMBER','Expr',1,'p_lisp_number','LISPParser.py',10),
  ('Expr -> LPAREN PLUS Expr Expr RPAREN','Expr',5,'p_lisp_plus','LISPParser.py',14),
  ('Expr -> LPAREN MINUS Expr Expr RPAREN','Expr',5,'p_lisp_minus','LISPParser.py',18),
  ('Expr -> LPAREN TIMES Expr Expr RPAREN','Expr',5,'p_lisp_times','LISPParser.py',22),
  ('Expr -> LPAREN DIVIDE Expr Expr RPAREN','Expr',5,'p_lisp_divide','LISPParser.py',26),
  ('Expr -> LPAREN CAR ListExpr RPAREN','Expr',4,'p_lisp_car','LISPParser.py',34),
  ('Expr -> LPAREN IF BoolExpr Expr Expr RPAREN','Expr',6,'p_lisp_exprif','LISPParser.py',40),
  ('BoolExpr -> TRUE','BoolExpr',1,'p_lisp_booltrue','LISPParser.py',47),
  ('BoolExpr -> FALSE','BoolExpr',1,'p_lisp_boolfalse','LISPParser.py',51),
  ('BoolExpr -> LPAREN GR Expr Expr RPAREN','BoolExpr',5,'p_lisp_boolgreater','LISPParser.py',55),
  ('BoolExpr -> LPAREN GREQ Expr Expr RPAREN','BoolExpr',5,'p_lisp_boolgreaterEqual','LISPParser.py',59),
  ('BoolExpr -> LPAREN LT Expr Expr RPAREN','BoolExpr',5,'p_lisp_boolless','LISPParser.py',63),
  ('BoolExpr -> LPAREN LTEQ Expr Expr RPAREN','BoolExpr',5,'p_lisp_boollessthenequal','LISPParser.py',67),
  ('BoolExpr -> LPAREN EQ Expr Expr RPAREN','BoolExpr',5,'p_lisp_boolequal','LISPParser.py',71),
  ('BoolExpr -> LPAREN NEQ Expr Expr RPAREN','BoolExpr',5,'p_lisp_boolnotequal','LISPParser.py',75),
  ('BoolExpr -> LPAREN NOT BoolExpr RPAREN','BoolExpr',4,'p_lisp_boolnegate','LISPParser.py',79),
  ('BoolExpr -> LPAREN AND BoolExpr BoolExpr RPAREN','BoolExpr',5,'p_lisp_booland','LISPParser.py',83),
  ('BoolExpr -> LPAREN OR BoolExpr BoolExpr RPAREN','BoolExpr',5,'p_lisp_boolor','LISPParser.py',87),
  ('ExprArray -> ExprArray Expr','ExprArray',2,'p_lisp_array','LISPParser.py',91),
  ('ExprArray -> Expr','ExprArray',1,'p_lisp_array_expr','LISPParser.py',96),
  ('ListExpr -> LPAREN ExprArray RPAREN','ListExpr',3,'p_lisp_list','LISPParser.py',99),
  ('ListExpr -> LPAREN RPAREN','ListExpr',2,'p_lisp_list_empty','LISPParser.py',102),
  ('ListExpr -> LPAREN CDR ListExpr RPAREN','ListExpr',4,'p_lisp_list_cdr','LISPParser.py',106),
  ('ListExpr -> LPAREN CONS Expr ListExpr RPAREN','ListExpr',5,'p_lisp_list_cons','LISPParser.py',114),
  ('empty -> <empty>','empty',0,'p_empty','LISPParser.py',121),
]
